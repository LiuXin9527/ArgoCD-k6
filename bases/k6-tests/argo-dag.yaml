apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: hello-world
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  entrypoint: k6-integration
  templates:
    - name: k6-integration
      dag:
        tasks:
#          - name: wait-sync
#            template: wait-sync
#          - name: k6-merchant
#            dependencies: [wait-sync]
#            template: k6-merchant
#            continueOn:
#              failed: true
#              error: true
#          - name: k6-payment-fee
#            dependencies: [wait-sync]
#            template: k6-payment-fee
#            continueOn:
#              failed: true
#              error: true
#          - name: k6-settlement-policy
#            dependencies: [wait-sync]
#            template: k6-settlement-policy
#            continueOn:
#              failed: true
#              error: true
          - name: k6-upload-report
#            dependencies: [k6-merchant]
#            dependencies: [k6-merchant, k6-payment-fee, k6-settlement-policy]
            template: k6-upload-report

    - name: wait-sync
      suspend:
        duration: "5"    # Must be a string. Default unit is seconds. Could also be a Duration, e.g.: "2m", "6h", "1d"

    - name: k6-merchant
      container:
        image: loadimpact/k6
        imagePullPolicy: IfNotPresent
        command: ['k6','run',  "/k6-scripts/test-merchant-apis.js"]
        volumeMounts:
          - name: k6-volume
            mountPath: /k6-scripts/report
            subPath: report
          - name: k6-scripts
            mountPath: /k6-scripts/test-merchant-apis.js
            subPath: test-merchant-apis.js
      volumes:
        - name: k6-volume
          emptyDir: {}
        - name: k6-scripts
          configMap:
            name: k6-scripts
            items:
              - key: 'test-merchant-apis.js'
                path: 'test-merchant-apis.js'
    - name: k6-payment-fee
      container:
        image: loadimpact/k6
        imagePullPolicy: IfNotPresent
        command: ['k6','run',  "/k6-scripts/test-payment-fee-apis.js"]
        volumeMounts:
          - name: k6-volume
            mountPath: /k6-scripts/report
            subPath: report
          - name: k6-scripts
            mountPath: /k6-scripts/test-payment-fee-apis.js
            subPath: test-merchant-apis.js
      volumes:
        - name: k6-volume
          emptyDir: {}
        - name: k6-scripts
          configMap:
            name: k6-scripts
            items:
              - key: 'test-payment-fee-apis.js'
                path: 'test-payment-fee-apis.js'
    - name: k6-settlement-policy
      container:
        image: loadimpact/k6
        imagePullPolicy: IfNotPresent
        command: ['k6','run',  "/k6-scripts/test-settlement-policy-apis.js"]
        volumeMounts:
          - name: k6-volume
            mountPath: /k6-scripts/report
            subPath: report
          - name: k6-scripts
            mountPath: /k6-scripts/test-settlement-policy-apis.js
            subPath: test-settlement-policy-apis.js
      volumes:
        - name: k6-volume
          emptyDir: {}
        - name: k6-scripts
          configMap:
            name: k6-scripts
            items:
              - key: 'test-settlement-policy-apis.js'
                path: 'test-settlement-policy-apis.js'
    - name: k6-upload-report
      container:
        image: loadimpact/k6
        imagePullPolicy: IfNotPresent
        command: ['k6','run',  "/k6-scripts/upload-report.js"]
        volumeMounts:
          - name: k6-volume
            mountPath: /k6-scripts/report
            subPath: report
          - name: k6-scripts
            mountPath: /k6-scripts/upload-report.js
            subPath: upload-report.js
      volumes:
        - name: k6-volume
          emptyDir: {}
        - name: k6-scripts
          configMap:
            name: k6-scripts
            items:
              - key: 'upload-report.js'
                path: 'upload-report.js'
              - key: 'aws.min.js.map'
                path: 'aws.min.js.map'
              - key: 'aws.min.js'
                path: 'aws.min.js'