apiVersion: v1
kind: Pod
metadata:
  name: vol1
spec:
  initContainers:
    - image: loadimpact/k6
      name: vm1
      #      command: ["sleep", "10m"]
#      args:
#        - run
#        - /k6-scripts/test-merchant-apis.js
      volumeMounts:
        - mountPath: /k6-scripts
          name: cache-volume
        - mountPath: /k6-scripts/test-merchant-apis.js
          name: k6-scripts
          subPath: test-merchant-apis.js
  containers:
#    - image: loadimpact/k6
#      name: vm1
#      #      command: ["sleep", "10m"]
#      args:
#        - run
#        - /k6-scripts/test-merchant-apis.js
#      volumeMounts:
#        - mountPath: /k6-scripts
#          name: cache-volume
#        - mountPath: /k6-scripts/test-merchant-apis.js
#          name: k6-scripts
#          subPath: test-merchant-apis.js
    - image: loadimpact/k6
      name: vm3
      args:
        - run
        - /k6-scripts/test-merchant-apis.js
      volumeMounts:
        - mountPath: /k6-scripts
          name: cache-volume
    - name: vm2
      image: nginx
      volumeMounts:
        - mountPath: /k6-scripts
          name: cache-volume
  #      volumeMounts:
  #        - mountPath: /
  #          name: k6-scripts
  #          subPath: k6-scripts
  volumes:
    - name: cache-volume
      #      persistentVolumeClaim:
      #        claimName: test-volume
      hostPath:
        # 宿主上目录位置
        path: /out
        type: Directory
#      emptyDir: {}
    - name: k6-scripts
      configMap:
        name: k6-scripts
        items:
          - key: 'test-merchant-apis.js'
            path: 'test-merchant-apis.js'
  restartPolicy: Never
#  backoffLimit: 0

#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: test-volume
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#
#---
#apiVersion: v1
#kind: PersistentVolume
#metadata:
#  name: my-pv
#spec:
#  capacity:
#    storage: 1Gi
#  accessModes:
#    - ReadWriteOnce
#  hostPath:
#    path: /k6-scripts